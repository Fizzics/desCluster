	NOTE: As of 4/1/2015, MKLROOT defined in this module has been changed
	From: /software/easybuild/software/imkl/11.1.3.174
	  To: /software/easybuild/software/imkl/11.1.3.174/mkl
/software/lmod/5.9.3/init/lmod_bash_completions: line 22: syntax error near unexpected token `('
/software/lmod/5.9.3/init/lmod_bash_completions: line 22: `	comm -23  <(_module_avail|sort)  <(_module_loaded_modules|sort)'
/software/lmod/5.9.3/init/lmod_bash_completions: line 22: warning: syntax errors in . or eval will cause future versions of the shell to abort as Posix requires
/software/easybuild/software/Python/2.7.6-ictce-6.3.5/lib/python2.7/site-packages/setuptools-3.6-py2.7.egg/pkg_resources.py:1045: UserWarning: /home/boada/.python-eggs is writable by group/others and vulnerable to attack when used with get_resource_filename. Consider a more secure location (set with .set_extraction_path or the PYTHON_EGG_CACHE environment variable).
<HDF5 file "halo00.hdf5" (mode r)>
<HDF5 file "halo01.hdf5" (mode r)>
<HDF5 file "halo02.hdf5" (mode r)>
<HDF5 file "halo03.hdf5" (mode r)>
<HDF5 file "halo04.hdf5" (mode r)>
<HDF5 file "halo05.hdf5" (mode r)>
<HDF5 file "halo06.hdf5" (mode r)>
<HDF5 file "halo07.hdf5" (mode r)>
<HDF5 file "halo08.hdf5" (mode r)>
<HDF5 file "halo09.hdf5" (mode r)>
<HDF5 file "halo10.hdf5" (mode r)>
<HDF5 file "halo11.hdf5" (mode r)>
<HDF5 file "halo12.hdf5" (mode r)>
<HDF5 file "halo13.hdf5" (mode r)>
<HDF5 file "halo14.hdf5" (mode r)>
<HDF5 file "halo15.hdf5" (mode r)>
<HDF5 file "halo16.hdf5" (mode r)>
<HDF5 file "halo17.hdf5" (mode r)>
<HDF5 file "halo18.hdf5" (mode r)>
<HDF5 file "halo19.hdf5" (mode r)>
<HDF5 file "truth00_Oii.hdf5" (mode r)>
<HDF5 file "truth01_Oii.hdf5" (mode r)>
<HDF5 file "truth02_Oii.hdf5" (mode r)>
<HDF5 file "truth03_Oii.hdf5" (mode r)>
<HDF5 file "truth04_Oii.hdf5" (mode r)>
<HDF5 file "truth05_Oii.hdf5" (mode r)>
<HDF5 file "truth06_Oii.hdf5" (mode r)>
<HDF5 file "truth07_Oii.hdf5" (mode r)>
<HDF5 file "truth08_Oii.hdf5" (mode r)>
<HDF5 file "truth09_Oii.hdf5" (mode r)>
<HDF5 file "truth10_Oii.hdf5" (mode r)>
<HDF5 file "truth11_Oii.hdf5" (mode r)>
<HDF5 file "truth12_Oii.hdf5" (mode r)>
<HDF5 file "truth13_Oii.hdf5" (mode r)>
<HDF5 file "truth14_Oii.hdf5" (mode r)>
<HDF5 file "truth15_Oii.hdf5" (mode r)>
<HDF5 file "truth16_Oii.hdf5" (mode r)>
<HDF5 file "truth17_Oii.hdf5" (mode r)>
<HDF5 file "truth18_Oii.hdf5" (mode r)>
<HDF5 file "truth19_Oii.hdf5" (mode r)>
16208 20260
0
1000
2000
3000
4000

real	68m28.828s
user	329m41.795s
sys	4m32.129s

------------------------------------------------------------
Sender: LSF System <lsfadmin@nxt1766>
Subject: Job 1770426: <targetedRealistic4> in cluster <Main_Compute> Done

Job <targetedRealistic4> was submitted from host <login3> by user <boada> in cluster <Main_Compute>.
Job was executed on host(s) <20*nxt1766>, in queue <sn_regular>, as user <boada> in cluster <Main_Compute>.
</home/boada> was used as the home directory.
</home/boada/desCluster/mkTargeted> was used as the working directory.
Started at Mon Sep 21 18:19:17 2015
Results reported on Mon Sep 21 19:27:54 2015

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
## job name
#BSUB -J targetedRealistic4

## send stderr and stdout to the same file
#BSUB -o output.%J

## login shell to avoid copying env from login session
## also helps the module function work in batch jobs
#BSUB -L /bin/bash

## 30 minutes of walltime ([HH:]MM)
#BSUB -W 02:00

## numprocs
#BSUB -n 20

## 20 cores/node
#BSUB -R 'span[ptile=20]'

source /home/boada/.bashrc
time py targetedRealistic_async.py 16208 20260
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   20338.52 sec.
    Max Memory :                                 3267 MB
    Average Memory :                             2996.61 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   3 MB
    Max Processes :                              24
    Max Threads :                                28

The output (if any) is above this job summary.

