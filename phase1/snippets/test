for i in randomHalos:
    ra, dec, z = astCoords.eq2cart(halo['RA'][i], halo['DEC'][i],
                vec_astCalc.dm(halo['Z'][i]))
    print ra, dec, z
    print 50*log10(halo['M200'][i]/0.72)
    ax2.scatter(ra, dec, s=50*log10(halo['M200'][i]/0.72), facecolor='#a60628', marker="*")


for k in unique_labels:
    if k == -1:
        break
    class_member_mask = (labels == k)
    xy = rp[class_member_mask & core_samples_mask]
    RA = pyl.mean(xy[:,0])
    DEC = pyl.mean(xy[:,1])
#    mTrue = t[class_member_mask & core_samples_mask]['M200'][0]/0.72
    mRec = t[class_member_mask & core_samples_mask]['MASS'][0]
#    x2 = X_[class_member_mask & core_samples_mask]
#    y2 = Y_[class_member_mask & core_samples_mask]
#    x2 = pyl.mean(x2)
#    y2 = pyl.mean(y2)
    print RA,DEC
    ax2.scatter(RA, DEC, s=50*log10(mRec), facecolor='none')
#    ax2.scatter(x2, y2, s=50*log10(mTrue), facecolor='#a60628', marker="*")
