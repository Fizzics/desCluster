run find_clusters.py
k = 6
class_member_mask = (labels ==k)
xy = t[class_member_mask & core_samples_mask]
xy
run find_clusters.py
run find_clusters.py
run find_clusters.py
run find_clusters.py
k = 6
class_member_mask = (labels ==k)
xy = t[class_member_mask & core_samples_mask]
xy
run find_clusters.py
class_member_mask = (labels ==k)
xy
xy = t[class_member_mask & core_samples_mask]
xy
k = 6
class_member_mask = (labels ==k)
xy = t[class_member_mask & core_samples_mask]
xy
xy['MASS'][0]/1e13
xy['MASS'][0]/1e12
xy['M200'][0]/1e12
len(xy)
scatter(X_,Y_, s=20)
run find_clusters.py
scatter(X_,Y_, s=20)
from mpl_toolkits.axes_grid1.inset_locator import zoomed_inset_axes
from mpl_toolkits.axes_grid1.inset_locator import mark_inset
x1, x2, y1, y2 = 802-10, 802+10, -220-10, -220+10
ax = gca()
axins = zoomed_inset_axes(ax,6, loc=1)
k = 0
class_member_mask = (labels ==k)
xy = t[class_member_mask & core_samples_mask]
ax.hist(xy['LOSV'], bins=15)
draw()
zoomed_inset_axes?
axins = zoomed_inset_axes(ax,6, loc=3)
axins.hist(xy['LOSV'], bins=15)
draw()
axins = zoomed_inset_axes(ax,6, loc=1)
axins.hist(xy['LOSV'], bins=15)
draw()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,0, loc=3)
axins.hist(xy['LOSV'], bins=15)
draw()
axins = zoomed_inset_axes(ax,2, loc=3)
axins.hist(xy['LOSV'], bins=15)
draw()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,6, loc=3)
axins.scatter(X_,Y_)
draw()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,1, loc=3)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
axins = zoomed_inset_axes(ax,2, loc=3)
axins.scatter(X_,Y_)
draw()
axins.set_ylim(y1,y2)
axins.set_xlim(x1,x2)
draw()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,6, loc=3)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,6, loc=1)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
axins = zoomed_inset_axes(ax,20, loc=3)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
zoomed_inset_axes?
axins = zoomed_inset_axes(ax,20, bbox_to_anchor=(0.5, 0.5))
axins.scatter(X_,Y_)
axins.set_ylim(y1,y2)
axins.set_xlim(x1,x2)
draw()
axins = zoomed_inset_axes(ax,20, bbox_to_anchor=(0.5, 0.5), loc='upper right')
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
axins = zoomed_inset_axes(ax,20, bbox_to_anchor=(0.5, 0.5), loc=1)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
axins = zoomed_inset_axes(ax,20, bbox_to_anchor=(0.5, 0.5), loc='UR')
axins.scatter(X_,Y_)
axins.set_ylim(y1,y2)
axins.set_xlim(x1,x2)
draw()
show()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,20, bbox_to_anchor=(0.5, 0.5), loc=1)
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
show()
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = zoomed_inset_axes(ax,6, bbox_to_anchor=(0.05, 0.5), loc=2)
axins.scatter(X_,Y_)
draw()
from mpl_toolkits.axes_grid1.inset_locator import inset_axes
axins = inset_axes(ax, 1,1 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.scatter(X_,Y_)
draw()
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
draw()
mark_inset(ax, axins, loc1=2, loc2=4, fc="none", ec="0.5")
draw()
axins = inset_axes(ax, 2,2 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.scatter(X_,Y_)
draw()
axins.set_ylim(y1,y2)
axins.set_xlim(x1,x2)
draw()
mark_inset(ax, axins, loc1=2, loc2=4, fc="none", ec="0.5")
draw()
close
close()
scatter(X_,Y_, s=20)
axins = inset_axes(ax, 2,2 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
mark_inset(ax, axins, loc1=2, loc2=4, fc="none", ec="0.5")
draw()
close()
scatter(X_,Y_, s=20)
ax= gca()
axins = inset_axes(ax, 2,2 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.scatter(X_,Y_)
axins.set_xlim(x1,x2)
axins.set_ylim(y1,y2)
mark_inset(ax, axins, loc1=2, loc2=4, fc="none", ec="0.5")
draw()
r\un find_clusters.py
run find_clusters.py
k = 8
class_member_mask = (labels ==k)
xy = t[class_member_mask & core_samples_mask]
xy
892170207232.0/1e13
close
close()
scatter(X_,Y_, s=20)
ax = gca()
axins = inset_axes(ax, 2,2 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.scatter(X_,Y_)
axins.hist(xy['LOSV'], bins=15)
draw()
scatter(X_,Y_, s=20)
ax = gca()
axins = inset_axes(ax, 2,2 , loc=2,bbox_to_anchor=(0.2, 0.55),bbox_transform=ax.figure.transFigure) # no zoom
axins.hist(xy['LOSV'], bins=15)
draw()
mark_inset(ax, axins, loc1=2, loc2=4, fc="none", ec="0.5")
draw()
xy
(vd/1082.9)**(1/0.336)
vd = calcVD_big(xy['LOSV'])
(vd/1082.9)**(1/0.336)
1e15/(0.7 * aca.H0*aca.Ez(avgz)/70) * (vd/1082.9)**(1/0.336)
avgz = xy['CLUSZ'][0]
1e15/(0.7 * aca.H0*aca.Ez(avgz)/70) * (vd/1082.9)**(1/0.336)
_/1e13
xy['M200'][0]/1e13
xy['MASS'][0]/1e13
subplots?
Z_.max()
Z_.min()
arange(1,5)
x = arange(1,5)
x/x.max()
scatter(X_, Y_, s= 20, alpha=Z_/Z_.min())
scatter(X_,Y_, s=20)
close()
scatter(X_,Y_, s=20)
scatter(X_, Y_, s= 20, alpha=Z_/Z_.min())
X_
gray()
draw()
show()
scatter(X_, Y_, s= 20, c=Z_)
colorbar()
run plot_find_clusters.py
f = hdf.File('stat_testing1072552.hdf5', 'r')
dset = f[f.keys()[0]]
x = dset.data
dset.shape
x = dset.value
x
dset.dtype
    a = 939
    b = 2.91
    c = 0.33
m = (x[:,8]/(a * ((aca.H0 * aca.Ez(x[:,-1]))/70)**c)**b)
m = (x[:,8]/(a * ((aca.H0 * vec_astCalc..Ez(x[:,-1]))/70)**c)**b)
m = (x[:,8]/(a * ((aca.H0 * vec_astCalc.Ez(x[:,-1]))/70)**c)**b)
len(m)
len(x)
scatter(x[:,-2], m)
scatter(x[:,-2], m)
m = (x[:,8]/(a * ((aca.H0 * vec_astCalc.Ez(x[:,-1]))/70)**c)**b) * 1e15
scatter(log10(x[:,-2]), log10(m))
x[:,8]
m = (x[:,8]**b/(a * ((aca.H0 * vec_astCalc.Ez(x[:,-1]))/70)**c)**b) * 1e15
close()
scatter(log10(x[:,-2]), log10(m))
scatter(log10(x[:,-2]/0.72), log10(m))
plot([12,16],[12,16])
xlim(12.5,15.5)
ylim(12.5,15.5)
figure(2)
scatter(log10(m),log10(x[:,-2]/0.72))
plot([12,16],[12,16])
xlim(12.5,15.5)
ylim(12.5,15.5)
history